#!/usr/bin/env python3
import os
import sys
from pathlib import Path
from rich.console import Console
from rich.table import Table

def main():
    console = Console()
    argc = len(sys.argv)
    
    root = Path(os.environ.get('MASHFS_ROOT', 'filesfs')).absolute()
    current_dir = Path(os.environ.get('MASHFS_CWD', 'home/mash'))
    
    target_dir = current_dir
    show_hidden = False
    
    if argc > 1:
        if sys.argv[1] == '-a':
            show_hidden = True
            if argc > 2:
                path = sys.argv[2]
                if path.startswith('/'):
                    target_dir = Path(path[1:])
                else:
                    target_dir = current_dir / path
        else:
            path = sys.argv[1]
            if path.startswith('/'):
                target_dir = Path(path[1:])
            else:
                target_dir = current_dir / path
    
    full_path = root / target_dir
    
    if not full_path.exists():
        print(f"ls: {target_dir}: No such file or directory", file=sys.stderr)
        sys.exit(1)
    
    if not full_path.is_dir():
        print(f"{target_dir}")
        sys.exit(0)
    
    items = sorted(os.listdir(full_path))
    
    if not show_hidden:
        items = [item for item in items if not item.startswith('.')]
    
    table = Table(show_header=False, box=None)
    
    col_count = 5
    rows = []
    current_row = []
    
    for i, item in enumerate(items):
        item_path = full_path / item
        
        if item_path.is_dir():
            display = f"[blue]{item}/[/blue]"
        elif os.access(item_path, os.X_OK):
            display = f"[green]{item}*[/green]"
        elif item.endswith(('.zip', '.tar', '.gz', '.xz')):
            display = f"[red]{item}[/red]"
        elif item.endswith(('.py', '.sh', '.c', '.cpp', '.h')):
            display = f"[yellow]{item}[/yellow]"
        else:
            display = f"{item}"
            
        current_row.append(display)
        
        if len(current_row) == col_count:
            rows.append(current_row)
            current_row = []
    
    if current_row:
        rows.append(current_row + [''] * (col_count - len(current_row)))
    
    for row in rows:
        table.add_row(*row)
    
    console.print(table)

if __name__ == "__main__":
    main() 