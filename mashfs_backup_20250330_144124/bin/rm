#!/usr/bin/env python3
import os
import sys
import shutil
from pathlib import Path

def main():
    root = Path(os.environ.get('MASHFS_ROOT', 'filesfs')).absolute()
    current_dir = Path(os.environ.get('MASHFS_CWD', 'home/mash'))
    
    argc = len(sys.argv)
    if argc < 2:
        print("rm: missing operand", file=sys.stderr)
        return 1
        
    recursive = False
    force = False
    
    args = sys.argv[1:]
    paths = []
    
    for arg in args:
        if arg.startswith('-'):
            if 'r' in arg or 'R' in arg:
                recursive = True
            if 'f' in arg:
                force = True
        else:
            paths.append(arg)
            
    if not paths:
        print("rm: missing operand", file=sys.stderr)
        return 1
        
    for path in paths:
        if path.startswith('/'):
            target_path = root / path[1:]
        else:
            target_path = root / current_dir / path
        
        if not target_path.exists():
            if not force:
                print(f"rm: cannot remove '{path}': No such file or directory", file=sys.stderr)
            continue
            
        try:
            if target_path.is_dir() and not recursive:
                print(f"rm: cannot remove '{path}': Is a directory", file=sys.stderr)
                continue
                
            if target_path.is_dir() and recursive:
                shutil.rmtree(target_path)
            else:
                target_path.unlink()
        except Exception as e:
            print(f"rm: cannot remove '{path}': {e}", file=sys.stderr)
            
    return 0

if __name__ == "__main__":
    sys.exit(main()) 
