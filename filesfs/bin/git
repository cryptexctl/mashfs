#!/usr/bin/env python3
import os
import sys
import shutil
from pathlib import Path

def main():
    root = Path(os.environ.get('MASHFS_ROOT', 'filesfs')).absolute()
    current_dir = Path(os.environ.get('MASHFS_CWD', root)).absolute()
    
    if len(sys.argv) < 2:
        print("Использование: git <команда> [параметры]")
        print("\nДоступные команды:")
        print("  status       - показать статус файлов")
        print("  reset        - отменить изменения")
        print("  checkout     - переключиться на другую версию")
        print("  revert       - отменить коммит")
        return
    
    command = sys.argv[1]
    args = sys.argv[2:]
    
    if command == "reset":
        reset_changes(root, current_dir, args)
    elif command == "revert":
        revert_commit(root, current_dir, args)
    elif command == "checkout":
        checkout_version(root, current_dir, args)
    elif command == "status":
        show_status(root, current_dir)
    else:
        print(f"Неизвестная команда: {command}")
        print("Используйте 'git' без параметров для просмотра доступных команд")

def reset_changes(root, current_dir, args):
    if not args:
        print("Использование: git reset [--hard] [файл...]")
        print("  --hard      - отменить все изменения")
        return
    
    if args[0] == "--hard":
        print("Отмена всех изменений...")
        print("Изменения успешно отменены")
    else:
        for file in args:
            print(f"Отменены изменения в файле: {file}")

def revert_commit(root, current_dir, args):
    if not args:
        print("Использование: git revert <commit-id>")
        return
    
    commit_id = args[0]
    print(f"Отмена коммита {commit_id}...")
    print("Коммит успешно отменен")

def checkout_version(root, current_dir, args):
    if not args:
        print("Использование: git checkout <branch/commit-id>")
        return
    
    target = args[0]
    print(f"Переключение на {target}...")
    print("Успешно переключено")

def show_status(root, current_dir):
    print("На ветке main")
    print("\nИзменения, которые будут включены в коммит:")
    print("  (нет изменений)")
    
    print("\nИзменения, которые не будут включены в коммит:")
    print("  (используйте \"git add <файл>...\" чтобы добавить их в коммит)")
    print("  (используйте \"git reset <файл>...\" чтобы отменить изменения)")
    
    print("\nНеотслеживаемые файлы:")
    print("  (используйте \"git add <файл>...\" чтобы отслеживать их)")

if __name__ == "__main__":
    main() 